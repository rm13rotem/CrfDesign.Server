@model IEnumerable<CrfOptionViewModel>
@using BuisnessLogic.Filters
@{
    ViewData["Title"] = "Index";
    var filter = ViewBag.filter as CrfOptionFilter;
    Dictionary<string, string> filterDictionary = new();
    filterDictionary.Add("Page", filter?.Page.ToString() ?? "1");
    filterDictionary.Add("NLines", filter?.NLines.ToString() ?? "20");
    filterDictionary.Add("PartialName", filter?.PartialName);
    filterDictionary.Add("CategoryId", filter?.CategoryId.ToString());
    filterDictionary.Add("id", "0");
}

<h1>Index</h1>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div class="form-group">
                <label for="CategoryId">Category Id</label>
                <select name="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
            </div>
            <div class="form-group">
                <label for="PartialName">Name (Partial will be fine)</label>
                <input name="PartialName" class="form-control" value="@filter?.PartialName" />
            </div>
            <div class="form-group">
                <label for="Page">Page</label>
                <input name="Page" class="form-control" value="@filter?.Page" />out of @filter?.TotalPages Pages (@filter?.TotalLines entities)
            </div>
            <div class="form-group">
                <label for="NLines">N Lines per Page</label>
                <input name="NLines" class="form-control" value="@filter?.NLines" />
            </div>
            <div class="form-group">
                <input type="submit" value="Filter Crf Options" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<p>
    <a asp-action="Create">Create New</a> |
    <a asp-action="Create" asp-controller="CrfOptionCategories">Create New Category</a>|
    <a asp-action="Index" asp-controller="CrfPages">Go To Crf Pages</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CrfOptionCategoryName)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CrfOptionCategoryName)

                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    @{ 
                        filterDictionary["id"] = item.Id.ToString();
                    }
                    <a asp-action="Duplicate" asp-all-route-data="@filterDictionary">Duplicate</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
